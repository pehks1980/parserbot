Парсер для сайта auto.ru

Работает в связке chromedriver + bs4

Многие сайты используют js-аяксы, кодирование своих страниц, поэтому bs4 просто физически не сможет обработать
эти данные. Вместо страниц иногда получается лабуда и какой то код для js.

Когда же идет обработка через chromedriver в его памяти все начинает кликаться и открываться, т.к. сайт думает, что он
открывается обычным человеком в веб браузере.

Таким образом, когда открывается страница в хром драйвере, ее текст может быть передан для bs4, который уже сможет найти
и поднять со страницы нужную информацию.

Недостаок - требуются ресурсы, т.к. это по сути полная автоматизация тестинга сервера, chromedriver может кликать,
открывать, переходить и т.д.
Также есть достаточно медленная работа, в сравнении с прямым парсингом bs4.

Как работает парсер:

Работа парсера начинается с запуска отдельного потока, который выполняя функцию "parse":
- открывает драйвер chromedriver,
- генерит список ссылок для парсинга,
- парсит эти cтраницы
- результат может сохранить данные просто в csv файле, а может сразу в db (models.py)

Управление парсером может быть реализовано 3 методами:
 - Удаленное через html контроллер \parserapp1 - реализован так сказать демо режим ч/з ajax:
    при нажатии на кнопку start parser - парсится сайт результат в файл .csv
    при нажатии на кнопу update db - парсер переносит из файла csv в бд.
    при нажатии на кнопу Parse and Update - информация при парсинге заносится сразу в бд.

 - Из того что скрипт ajax отправляет обьекты на сайт, следовательно доступен метод такого же управления подобно ботами телеграммах:
    ajax команды можно посмотреть в urls.py

 - Программа имеет вызов для старта Parse and Update - (типа как API вызов):
    описание:

    #Page_idx - start page -  стартовая страница
    #page_count - numbr of pages - количство страниц
    #use_proxy - use parser via proxy (from proxies.txt) - использовать открытые прокси (информацию о серверах надо завести в файлик)
    #region_idx - idx of region in URLS array - индекс массива регионов: заносится для удобства работы с данными бд.
                URLS = [
                    'https://auto.ru/sankt-peterburg/cars/used/',
                    'https://auto.ru/moskva/cars/used/',
                    'https://auto.ru/nizhniy_novgorod/cars/used/',
                    'https://auto.ru/ekaterinburg/cars/used/',
                    'https://auto.ru/kaliningrad/cars/used/',
                ]

    task = ParseAndUpdateDb(page_idx, page_count, region_idx, url_params_idx, use_proxy=use_proxy)

    Вызов запустит отдельный поток на обработку. В итоге информация будет собрана в таблице CarAds.


 Инструкция по инсталлированию на сервер в install.txt.
